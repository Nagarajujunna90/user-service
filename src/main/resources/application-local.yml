server:
  port: 8082

#eureka:
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#  instance:
#    hostname: localhost
#logging:
#  level:
#    root: WARN
#    org.springframework: INFO
#    org.apache.kafka: DEBUG

spring:
  application:
    name: user-service
  datasource:
    url: jdbc:mysql://localhost:3306/e-user?useSSL=false&allowPublicKeyRetrieval=true
    password: root
    username: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false

  codec:
    max-in-memory-size: 10MB
#Kafka properties started here
  kafka:
    autoStartup: false
    ssl:
      trust-store-type: SSL
      key-store-key:
      key-store-password:
      key-store-location:
    security:
      protocol: SASL_SSL
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      bootstrap-servers: localhost:9092
      group-id: nagaraju
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
    topics:
       input: createUser
  config:
    import: optional:configserver:http://localhost:8888
  main:
    web-application-type: reactive
      #The above properties represent that only 2 requests are allowed in 5 seconds duration. Also,
      #there is no timeout duration which means after completion of 5 seconds, the user can send request again.

  jackson:
    serialization:
      indent-output: true
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
  endpoint:
    health:
      show-details: always
